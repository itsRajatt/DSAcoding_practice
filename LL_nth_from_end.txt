// Online C++ compiler to run C++ program online
#include <bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    Node *next;
    Node(int x)
    {
        data=x;
        next=nullptr;
    }
};
//naive
/*void printMiddle(Node * head){
    if(head==NULL)return;
    int count=0;
    Node *curr;
    for(curr=head;curr!=NULL;curr=curr->next)
        count++;
    curr=head;
    for(int i=0;i<count/2;i++)
        curr=curr->next;
    cout<<curr->data;
}
*/


Node *middleLL(Node *head)
{
    Node *p=head;
    Node *q=head;
    
    while(q->next)
    {
        p=p->next;
        q=q->next->next;
    }
    return p;
}

//naive
void printNthFromEnd(Node * head,int n){
    int len=0;
    for(Node *curr=head;curr!=NULL;curr=curr->next)
        len++;
    if(len<n)
        return;
    Node *curr=head;
    for(int i=1;i<len-n+1;i++) //important
        curr=curr->next;
    cout<<(curr->data)<<" ";
}

//better 2pointer approach
//move first n time , then start second from head and run till first !=nullptr and this makes difference between them = n so second will give the answer when first==nullptr
void print_NthFromEnd(Node * head,int n){
    if(head==NULL)return;
    Node *first=head;
    for(int i=0;i<n;i++){
        if(first==NULL)return;
        first=first->next;
    }
    Node *second=head;
    while(first!=NULL){
        second=second->next;
        first=first->next;
    }
    cout<<(second->data);
}

void printLL(Node *head)
{
    if(!head) {cout<<"-1"<<" "; return ;}
    cout<<head->data<<" ";
    head=head->next;
}

int main() {
    Node *head=new Node(5);
    head->next=new Node(10);
    head->next->next=new Node(25);
    head=middleLL(head);
    printLL(head);

    return 0;
}