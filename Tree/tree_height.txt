#include<bits/stdc++.h>
using namespace std;

//inorder LrE , point top
//preOrder rLR , point right
//postOrder LRr , point left 

struct Node
{
    int key;
    Node* left;
    Node *right;
    Node(int k){
        key=k;
        left=right=nullptr;
    }
};

int height(Node *root)
{
    if(!root) return 0;
    return max(height(root->left),height(root->right))+1;
}

int maxDepth(TreeNode* root) {
        if(root == NULL) return 0;
        queue<TreeNode*> q;
        int depth = 0;
        q.push(root);
        while(!q.empty()){
            int size = q.size();
            while(size--){
                TreeNode* curr = q.front();
                q.pop();
                if(curr->left != NULL) q.push(curr->left);
                if(curr->right != NULL) q.push(curr->right);
            }
            depth++;
        }
        return depth++;
    }

int main() {
    Node *root=new Node(10);
	root->left=new Node(20);
	root->right=new Node(30);
	root->right->left=new Node(40);
	root->right->right=new Node(50);
	
	cout<<height(root);

    return 0;
}